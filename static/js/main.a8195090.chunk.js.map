{"version":3,"sources":["components/Titles.js","components/Form.js","components/Stocks.js","App.js","serviceWorker.js","index.js"],"names":["Titles","Component","Form","onSubmit","this","props","getStockPrice","type","name","placeholder","Stocks","Fragment","fbSymbol","fbPrice","amznSymbol","amznPrice","aaplSymbol","aaplPrice","nflxSymbol","nflxPrice","googSymbol","googPrice","price","fiftytwoWeekHigh","fiftytwoWeekLow","volume","error","API_KEY","App","state","symbol","undefined","componentDidMount","e","a","fetch","api_call","json","data","console","log","setState","preventDefault","target","elements","value","toUpperCase","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a8195090.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nclass Titles extends Component {\n  render() {\n    return (\n      <div>\n        <h1>Stock Prices</h1>\n        <p>Find information about a stock</p>\n      </div>\n    );\n  }\n}\n\nexport default Titles;\n","import React, { Component } from \"react\";\n\nclass Form extends Component {\n  render() {\n    return (\n      <form onSubmit={this.props.getStockPrice}>\n        <input type=\"text\" name=\"symbol\" placeholder=\"Symbol\" />\n        <button>Get Stock Information</button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\n\nclass Stocks extends Component {\n  render() {\n    return (\n      <React.Fragment>\n        <div>\n          {this.props.fbSymbol && this.props.fbPrice && (\n            <p>\n              Facebook Stock Price: {this.props.fbSymbol} , {this.props.fbPrice}{\" \"}\n              per share\n            </p>\n          )}\n          {this.props.amznSymbol && this.props.amznPrice && (\n            <p>\n              Amazon Stock Price: {this.props.amznSymbol} ,{\" \"}\n              {this.props.amznPrice} per share\n            </p>\n          )}\n          {this.props.aaplSymbol && this.props.aaplPrice && (\n            <p>\n              Apple Stock Price: {this.props.aaplSymbol} ,{\" \"}\n              {this.props.aaplPrice} per share\n            </p>\n          )}\n          {this.props.nflxSymbol && this.props.nflxPrice && (\n            <p>\n              Netflix Stock Price: {this.props.nflxSymbol} ,{\" \"}\n              {this.props.nflxPrice} per share\n            </p>\n          )}\n          {this.props.googSymbol && this.props.googPrice && (\n            <p>\n              Google Stock Price: {this.props.googSymbol} ,{\" \"}\n              {this.props.googPrice} per share\n            </p>\n          )}\n          <br />\n        </div>\n        <div>\n          {this.props.name && this.props.price && (\n            <p>\n              Stock Information: {this.props.name} , {this.props.price} per\n              share\n            </p>\n          )}\n          {this.props.fiftytwoWeekHigh && (\n            <p>52 week High: {this.props.fiftytwoWeekHigh}</p>\n          )}\n          {this.props.fiftytwoWeekLow && (\n            <p>52 week Low: {this.props.fiftytwoWeekLow}</p>\n          )}\n          {this.props.volume && <p> Volume: {this.props.volume}</p>}\n          {this.props.error && <p> {this.props.error}</p>}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Stocks;\n","import React, { Component } from \"react\";\nimport Titles from \"./components/Titles\";\nimport Form from \"./components/Form\";\nimport Stocks from \"./components/Stocks\";\nconst API_KEY = \"N9wJwfuVyqBclNRtdw9V5zLLRQacv7nm0ONaM113GF9ywcihrPo3f0OABsGc\";\n\nclass App extends Component {\n  state = {\n    symbol: undefined,\n    name: undefined,\n    price: undefined,\n    fiftytwoWeekHigh: undefined,\n    fiftytwoWeekLow: undefined,\n    volume: undefined,\n    fbPrice: undefined,\n    fbSymbol: undefined,\n    amznPrice: undefined,\n    amznSymbol: undefined,\n    aaplPrice: undefined,\n    aaplSymbol: undefined,\n    nflxPrice: undefined,\n    nflxSymbol: undefined,\n    googPrice: undefined,\n    googSymbol: undefined,\n    error: undefined\n  };\n  componentDidMount = async e => {\n    const api_call = await fetch(\n      `https://api.worldtradingdata.com/api/v1/stock?symbol=FB,AAPL,AMZN,NFLX,GOOG&api_token=${API_KEY}`\n    );\n    const data = await api_call.json();\n    console.log(data);\n    this.setState({\n      fbSymbol: data.data[2].symbol,\n      fbPrice: data.data[2].price,\n      amznSymbol: data.data[1].symbol,\n      amznPrice: data.data[1].price,\n      aaplSymbol: data.data[0].symbol,\n      aaplPrice: data.data[0].price,\n      nflxSymbol: data.data[4].symbol,\n      nflxPrice: data.data[4].price,\n      googSymbol: data.data[3].symbol,\n      googPrice: data.data[3].price,\n      error: \"\"\n    });\n  };\n  getStockPrice = async e => {\n    e.preventDefault();\n    const symbol = e.target.elements.symbol.value.toUpperCase();\n    const api_call = await fetch(\n      `https://api.worldtradingdata.com/api/v1/stock?symbol=${symbol}&api_token=${API_KEY}`\n    );\n    const data = await api_call.json();\n    if (symbol) {\n      console.log(data);\n      this.setState({\n        symbol: data.data[0].symbol,\n        name: data.data[0].name,\n        price: data.data[0].price,\n        fiftytwoWeekHigh: data.data[0][\"52_week_high\"],\n        fiftytwoWeekLow: data.data[0][\"52_week_low\"],\n        volume: data.data[0].volume,\n        error: \"\"\n      });\n    } else {\n      this.setState({\n        symbol: undefined,\n        name: undefined,\n        price: undefined,\n        error: \"Please enter the symbol of a company.\"\n      });\n    }\n  };\n  render() {\n    return (\n      <div>\n        <Titles />\n        <Form getStockPrice={this.getStockPrice} />\n        <Stocks\n          symbol={this.state.symbol}\n          name={this.state.name}\n          price={this.state.price}\n          fiftytwoWeekHigh={this.state.fiftytwoWeekHigh}\n          fiftytwoWeekLow={this.state.fiftytwoWeekLow}\n          volume={this.state.volume}\n          error={this.state.error}\n          fbPrice={this.state.fbPrice}\n          fbSymbol={this.state.fbSymbol}\n          amznPrice={this.state.amznPrice}\n          amznSymbol={this.state.amznSymbol}\n          aaplPrice={this.state.aaplPrice}\n          aaplSymbol={this.state.aaplSymbol}\n          nflxPrice={this.state.nflxPrice}\n          nflxSymbol={this.state.nflxSymbol}\n          googPrice={this.state.googPrice}\n          googSymbol={this.state.googSymbol}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}